: delay_1ms
   d# 8334 begin d# 1 - dup d# 0 = until drop	\ 100MHz
\ d# 4167 begin d# 1 - dup d# 0 = until	\ 50MHz
;

: delay_nms
   d# 0 do delay_1ms loop
;

: delay_10us
   d# 40 begin d# 1 - dup d# 0 = until drop	\ 100MHz
;

: delay_n_10us
   d# 0 do delay_10us loop
;

: delay_i2c
    d# 4 d# 0 do delay_10us loop
;

: delay_change
    d# 10 d# 0 do delay_10us loop
;

VARIABLE Rshunt
VARIABLE Busv
VARIABLE Current
VARIABLE ADDR
VARIABLE data


: con-ADDR
  h# 15 ADDR ! 
;

: emit-i2c	\ hecho por el profe
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    i2c_data_wr !
;

: read-i2c
    delay_change
    d# 1 i2c_rw !
    ADDR dup @ i2c_addr ! drop  
    begin i2c_busy @ d# 0 = until
    dup i2c_data_rd @ ram0 !
    delay_i2c
    begin i2c_busy @ d# 0 = until
    dup i2c_data_rd @ ram0 !
     
;

: init 
    begin i2c_busy @ d# 0 = until drop
    ADDR dup @ i2c_addr ! drop
    h# 4F i2c_data_wr !
    d# 0 i2c_rw !
    d# 1 i2c_ena !
;

: con-rshunt
    delay_i2c
    h# A2 Rshunt !
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    Rshunt dup @ i2c_data_wr ! drop
    h# 18 Rshunt !
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    Rshunt dup @ i2c_data_wr ! drop
; 


: con-busv
    delay_i2c
    h# 25 Rshunt !
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    Rshunt dup @ i2c_data_wr ! drop
    h# 65 Rshunt !
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    Rshunt dup @ i2c_data_wr ! drop
;

: main 
\    begin
    d# 5 delay_n_10us  \ retrasa 10 ns 
\    d# 1 gp_out0 !
\    d# 500 delay_nms !
\    d# 0 gp_out0 !
\   d# 500 delay_nms !
\    d# 1 gp_out0 !
\   d# 500 delay_nms !
\    d# 0 gp_out0 !
\    d# 500 delay_nms !
    con-ADDR
    init
    con-rshunt
    read-i2c
    d# 0 i2c_ena !
\ h# A3 emit_i2c !
\ begin i2c_busy @ d# 1 = until dup rot 1 > and if
\ d# 1 - dup apt-get install git
\ h# 3A i2c_data_wr ! 
\ d# 1 i2c_rw !
\ else 
\ h# 00 i2c_addr !
\ h# 00 i2c_data_wr !
\ d# 1 i2c_rw !
\ then
\ again
\ d# 20 delay_n_10us   
\ h# 5A i2c_data_wr !
\ d# 1 i2c_rw !
\ h# 4C i2c_addr !
\ d# 0 i2c_ena !
\ begin i2c_busy @ d# 0 = until

\ ram0 @ gp_out1 !
\ begin
\ d# 1 gp_out0 !
\ delay_10us 
\ d# 0 gp_out0 !
\ delay_10us
\ again
;


\ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\  SEGUNDA PRUEBA 
\ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

VARIABLE Rshunt
VARIABLE Busv
VARIABLE CurrentD
VARIABLE ADDR
VARIABLE data
VARIABLE MSB
VARIABLE LSB
VARIABLE INAR

: delay_1ms
   d# 8334 begin d# 1 - dup d# 0 = until drop	\ 100MHz
\ d# 4167 begin d# 1 - dup d# 0 = until	\ 50MHz
;

: delay_nms
   d# 0 do delay_1ms loop
;

: delay_10us
   d# 40 begin d# 1 - dup d# 0 = until drop
;

: delay_n_10us
   d# 0 do delay_10us loop
;

: delay_i2c
    d# 3 d# 0 do delay_10us loop
;

: delay_change
    d# 10 d# 0 do delay_10us loop
;

: con-ADDR
    h# 40 ADDR ! 
;

: emit-i2c	\ hecho por el profe
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    i2c_data_wr !
;

: reset_i2c
    begin i2c_busy @ d# 0 = until 
    d# 0 i2c_ena !
    delay_i2c
    d# 1 i2c_ena !
;

: turn-off
    begin i2c_busy @ d# 0 = until 
    d# 0 i2c_ena !
    delay_i2c
;

: wr2-i2c
    begin i2c_busy @ d# 0 = until 
    ADDR dup @ i2c_addr ! drop
    i2c_data_wr !
    d# 0 i2c_rw !
    d# 1 i2c_ena !
    delay_i2c
    begin i2c_busy @ d# 0 = until 
    i2c_data_wr !
    delay_i2c
    begin i2c_busy @ d# 0 = until
    i2c_data_wr !
    delay_i2c
;

: wt-readi2c
    con-ADDR
    ADDR dup @ i2c_addr ! drop   
    begin i2c_busy @ d# 0 = until
    d# 1 i2c_rw !
    delay_i2c
    begin i2c_busy @ d# 0 = until
    d# 0 i2c_rw !
    delay_i2c
;

: mode-readi2c
    delay_i2c 
    con-ADDR  
    ADDR dup @ i2c_addr ! drop   
    begin i2c_busy @ d# 0 = until
    d# 1 i2c_rw !
    delay_i2c
    begin i2c_busy @ d# 0 = until
    i2c_data_rd @ 
    delay_i2c
    delay_i2c
    begin i2c_busy @ d# 0 = until
    i2c_data_rd @
;
    
: save-i2c 
    delay_i2c 
    con-ADDR
    ADDR dup @ i2c_addr ! drop   
    begin i2c_busy @ d# 0 = until
    d# 1 i2c_rw !
    delay_i2c
    begin i2c_busy @ d# 0 = until
    i2c_data_rd @ 
    delay_i2c
    delay_i2c
    d# 0 i2c_rw !
    begin i2c_busy @ d# 0 = until
    d# 8 lshift 
    i2c_data_rd @
    or dup INAR !
    INAR dup @ gp_out1 ! drop
    INAR dup @ emit-uart
;


: read-shuntV
;   
 
: calcular-t
;        


: main
\  begin
    con-ADDR
    h# 1F h# 3C h# 00  
    wr2-i2c

    \ reset_i2c  \ Para reiniciar el modulo y volver a hacer la escritura
    h# 01 i2c_data_wr !
    delay_i2c   
    wt-readi2c \ Espera pero no lee
    h# 00 h# 10 h# 05
    wr2-i2c
    \ reset_i2c
    h# 04 i2c_data_wr !
    save-i2c     
    d# 0 i2c_ena !
\  again
;

